module.exports = function(modules) {
    var installedModules = {};
    function __webpack_require__(moduleId) {
        if (installedModules[moduleId]) return installedModules[moduleId].exports;
        var module = installedModules[moduleId] = {
            exports: {},
            id: moduleId,
            loaded: false
        };
        modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
        module.loaded = true;
        return module.exports;
    }
    __webpack_require__.m = modules;
    __webpack_require__.c = installedModules;
    __webpack_require__.p = "";
    return __webpack_require__(0);
}([ function(module, exports, __webpack_require__) {
    module.exports = __webpack_require__(5);
}, function(module, exports, __webpack_require__) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    var _popup = __webpack_require__(2);
    var _popup2 = _interopRequireDefault(_popup);
    function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : {
            "default": obj
        };
    }
    exports.default = {
        props: {
            show: {
                type: Boolean,
                twoWay: true
            },
            height: {
                type: String,
                "default": "auto"
            },
            hideOnBlur: {
                type: Boolean,
                "default": true
            }
        },
        ready: function ready() {
            var _this = this;
            this.popup = new _popup2.default({
                container: _this.$el,
                innerHTML: "",
                hideOnBlur: _this.hideOnBlur,
                onOpen: function onOpen(dialog) {
                    _this.fixSafariOverflowScrolling("auto");
                    _this.show = true;
                },
                onClose: function onClose(dialog) {
                    _this.fixSafariOverflowScrolling("touch");
                    _this.show = false;
                }
            });
            this.$overflowScrollingList = document.querySelectorAll(".vux-fix-safari-overflow-scrolling");
        },
        methods: {
            fixSafariOverflowScrolling: function fixSafariOverflowScrolling(type) {
                if (!this.$overflowScrollingList.length) return;
                for (var i = 0; i < this.$overflowScrollingList.length; i++) {
                    this.$overflowScrollingList[i].style.webkitOverflowScrolling = type;
                }
            }
        },
        data: function data() {
            return {
                hasFirstShow: false
            };
        },
        watch: {
            show: function show(val) {
                if (val) {
                    this.popup.show();
                    this.$emit("on-show");
                    if (!this.hasFirstShow) {
                        this.$emit("on-first-show");
                        this.hasFirstShow = true;
                    }
                } else {
                    this.$emit("on-hide");
                    this.show = false;
                    this.popup.hide(false);
                }
            }
        },
        beforeDestroy: function beforeDestroy() {
            this.popup.destroy();
        }
    };
}, function(module, exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    var popupDialog = function popupDialog(option) {
        this.uuid = Math.random().toString(36).substring(3, 8);
        this.params = {};
        if (Object.prototype.toString.call(option) === "[object Object]") {
            this.params = {
                input: option.input || "",
                container: document.querySelector(option.input) || "",
                innerHTML: option.innerHTML || "",
                hideOnBlur: option.hideOnBlur,
                onOpen: option.onOpen || function() {},
                onClose: option.onClose || function() {}
            };
        }
        if (!!document.querySelectorAll(".vux-popup-mask").length <= 0) {
            this.divMask = document.createElement("a");
            this.divMask.className = "vux-popup-mask";
            this.divMask.href = "javascript:void(0)";
            document.body.appendChild(this.divMask);
        }
        var div = void 0;
        if (!option.container) {
            div = document.createElement("div");
        } else {
            div = option.container;
        }
        div.className = "vux-popup-dialog vux-popup-dialog-" + this.uuid;
        if (!option.container) {
            document.body.appendChild(div);
        }
        this.mask = document.querySelector(".vux-popup-mask");
        this.container = document.querySelector(".vux-popup-dialog-" + this.uuid);
        this._bindEvents();
        option = null;
        return this;
    };
    popupDialog.prototype.onClickMask = function() {
        this.hide(false);
    };
    popupDialog.prototype._bindEvents = function() {
        this.params.hideOnBlur && this.mask.addEventListener("click", this.onClickMask.bind(this), false);
    };
    popupDialog.prototype.show = function() {
        this.mask.classList.add("vux-popup-show");
        this.container.classList.add("vux-popup-show");
        this.params.onOpen && this.params.onOpen(this);
    };
    popupDialog.prototype.hide = function() {
        var shouldCallback = arguments.length <= 0 || arguments[0] === undefined ? true : arguments[0];
        this.container.classList.remove("vux-popup-show");
        if (!document.querySelector(".vux-popup-dialog.vux-popup-show")) {
            this.mask.classList.remove("vux-popup-show");
        }
        shouldCallback === false && this.params.onClose && this.params.onClose(this);
    };
    popupDialog.prototype.html = function(html) {
        this.container.innerHTML = html;
    };
    popupDialog.prototype.destroy = function() {
        this.mask.removeEventListener("click", this.onClickMask.bind(this), false);
        this.mask && this.mask.parentNode && this.mask.parentNode.removeChild(this.mask);
    };
    exports.default = popupDialog;
}, function(module, exports) {}, function(module, exports) {
    module.exports = " <div v-show=show transition=vux-popup :style={height:height} class=vux-popup> <slot></slot> </div> ";
}, function(module, exports, __webpack_require__) {
    var __vue_script__, __vue_template__;
    __webpack_require__(3);
    __vue_script__ = __webpack_require__(1);
    __vue_template__ = __webpack_require__(4);
    module.exports = __vue_script__ || {};
    if (module.exports.__esModule) module.exports = module.exports.default;
    if (__vue_template__) {
        (typeof module.exports === "function" ? module.exports.options || (module.exports.options = {}) : module.exports).template = __vue_template__;
    }
} ]);